-This is use verify login and provide roles to the logged in user
-This seems to be its own server that runs of a port

Tutorial (by video)
  https://www.youtube.com/watch?v=fvxQ8bW0vO8

Tutorial (by reading)
  https://www.keycloak.org/getting-started/getting-started-zip

  The core concept in Keycloak is a Realm. 
  A realm secures and manages security metadata for a set of users, applications, and registered oauth clients. 
  Users can be created within a specific realm within the Administration console. 
  Roles (permission types) can be defined at the realm level 
  and you can also set up user role mappings to assign these permissions to specific users.

Definitions using Zoo Management as an example
  -Realm: A zoo branch (e.g., "Central Zoo") that manages its own animals, staff, and visitors separately from other branches.
  
  -Role: A job title at the zoo (e.g., "Vet", "Cleaner", "Admin") that defines what someone can do.
  
  -User: A person at the zoo (e.g., John, the vet) who is assigned a role and given permissions.
  
  -Client: The zoo’s website or app (e.g., "zoo-management") that people use to log in. 
    It doesn’t handle authentication itself but relies on Keycloak to 
    verify users and check their roles before granting access.

Has an Admin API


-The keycloak in here will be setup with Google login
  -Change accordingly for how you need (sorry you gotta figure that part out)

1. Download keycloak
  https://www.keycloak.org/downloads
    I am starting with:
      Server, Keycloak, Quarkus distribution, Zip


Here is the steps to build the one in the zoo


The core concept in Keycloak is a Realm. 
A realm secures and manages security metadata for a set of users, applications, and registered oauth clients. 
Users can be created within a specific realm within the Administration console. 
Roles (permission types) can be defined at the realm level 
and you can also set up user role mappings to assign these permissions to specific users.

Definitions
  -Realm: A zoo branch (e.g., "Central Zoo") that manages its own animals, staff, and visitors separately from other branches.
  
  -Role: A job title at the zoo (e.g., "Vet", "Cleaner", "Admin") that defines what someone can do.
  
  -User: A person at the zoo (e.g., John, the vet) who is assigned a role and given permissions.
  
  -Client: The zoo’s website or app (e.g., "zoo-management") that people use to log in. 
    It doesn’t handle authentication itself but relies on Keycloak to 
    verify users and check their roles before granting access.

1. Start up the Keycloak dev server at port 8100 (DEV mode, NOT for production)
  bin/kc.sh start-dev --http-port=8100

2. Create a temporary Admin


2. Make real admin and erase old one (in master realm)
  Click Users on left
  Click Add User
    Email verified: ON
    username:
    email:
    first name:
    last name:
  Click Create
  Click Credentials tab
  Set password
    
    temporary: OFF
  Save and set password
  Click Role Mappign tab
  click Assign Role
  In pop up click drop down in top left that says "Filter by clients"
  Switch it to "Filter by Realm Roles"
    admin: check on
    create-realm: check on
    OTHERS LEAVE AS IS
  Click Assign

  Log out of tempadmin
  Login as admin
  Click Users on left
  Select 3 dots on right for tempadmin and Delete

3. Create Realm zoo
  Click drop down saying master on top left
  Click Create Realm
  Name the realm
    zoo
  Click create

Ensure you are always in the zoo realm in that drop down

4. Add the zoo-client
  Click clients
  Click "Create Client"
    Client Type: OpenID Connect
    Client ID: zoo-client
    Name: Zoo Client
    Description: 
  Click Next
    Client authentication: ON
    Authorization: OFF
    Standard Flow: CHECK
    Direct Access: CHECK
    All others: UNCHECK
  Click Next
    Root: http://localhost:3000
    Home: http://localhost:3000
    redirect: http://localhost:3000/api/auth/callback     ADD TO THIS LATER
    logout redirect: http://localhost:3000/            ADD TO THIS LATER OR FIX UP
    origins: http://localhost:3000         for CORS
  Click Save

5. Add Roles 
  Click Realm Roles on the left
  Click Create Role
    Role Name: GUEST
    Description: 
  Click Save
  Repeat for all roles
    ADMIN
    STAFF
    VET
    VENDOR
    ...
  
6. Make Google an Identity Provider
  Click Identity Provider on left bottom
  Choose Google
  Go to google cloud console for crispirzoo
    In APIs & Services/Credentials
    Click on Zoo Management
      You already made this whole thing
    Authorized JavaScript Origins needs
      http://localhost:8100
    Authorized redirect URIs needs
      http://localhost:8100/realms/zoo/broker/google/endpoint
    Click Save
  Back in Keycloak
    Alias: google
    Client Id: from google, in .env of zoo
    Client Secret: from google, in .env of zoo
    Everything else leave as is
  Click Add

7. Make GUEST a default Role (will be given when account is created)
  Click Identity Provider on left bottom
  Click google
  Choose tab Mapper
  Click Add Mapper
    Name: Default Role GUEST
    Sync mode override: Import
    Mapper Type: Harcode Role
    Click Select Role
      In the open window click the drop down in the top left and switch to Filter by Realm Role
      Select GUEST
      Click assign
    Click Save

8. Make google login create user
  Click Identity Provider on left bottom
  Click google
  Settings tab scroll to bottom
  Set the following
  First login flow override: first broker login
  Trust Email: ON
  Click Save
  ALSO
  Click Realm Settings on left
  Choose tab Login
    User registration: ON
    Login with email is on by default but maybe want to change?

9. Get the client secret and put it in the .env for zoo
  Click on Clients on left
  Click on zoo-client
  Scoll down and Ensure
    Client Authentication: ON
  Click Save
  Credentials tab has showed up. Click it
  Copy the client secret
  Add it to the .evn in zoo at 













THE BELOW IS BAD





STEPS TO RUN KEYCLOAK

-The keycloak in here will be setup with Google login
  -Change accordingly for how you need (sorry you gotta figure that part out)

1. Download keycloak
  https://www.keycloak.org/downloads
    I am starting with:
      Server, Keycloak, Quarkus distribution, Zip

We will be at the top level in the folder keycloak-26.1.0 in these steps
2. Start up the Keycloak dev server at port 8180 (DEV mode, NOT for production)
  bin/kc.sh start-dev --http-port=8180

3. Login to keycloak by visiting the url
  localhost:8180

4. Create an temporary admin user (requirement on first login) (can use email as username in real setup)
  Username: keycloakadmin
  Password: authorizeSomeStuff

  Go to administration console by clicking the button after created
  ReEnter the login information

5. Sign in as admin
  ReEnter the stuff above to sign in and take you to an admin dashboard

Create a permanent admin

  1. Create user
  2. Credentials tab create password
  3. Role mappign tab click Assign Role
  4. Top left drop down open and choose Filter by realm roles
  5. choose admin, create-realm, all of them and click assign
  6. logout of temporary admin and login as this admin
  7. delete the temporary admin

Create Client
  1. In zoo realm click on client on left
  2. click Create Client
  3. choose OpenID Connet, enter zoo-client, Zoo Client and click Next
  4. on selector have Standard Flow checked
      Uncheck all others
      Direct Access Grant is for password sign on. You are using google so uncheck

Add Google as Identity Provider
  1. Click Identity Provider on left
  2. Choose Google under social
  3. Go to google cloud console and set up the whole thing with oAuth and credentials (this sucks, i can give info another time)
    3.1 In Authorized Redirect URIs add http://localhost:8180/realms/zoo/broker/google/endpoint
    3.2 Get you Google Client Id and Google Client Secret
  4. Add the Client Id and Client Secret from google
  5. click Save

Allow for new users to be created on sign in
  1. On left under Configure click "Realm settings"
  2. User registration: ON
  3. Login with Email: ON
  4. On left go to Identity Providers again and choose google
  5. Scroll down and do these settings
  6. Trust Email: ON
    Prevent duplicate accounts for same email
  7. First login flow override
    7.1. set to first broker login
  8. Save


Get KEYCLOAK_CLIENT_SECRET
  1. Under zoo-client
  2. "Client Authentication" switched to ON
  3. save
  4. after save a credentials tab appears. click on it
  5. get the client secret

6. Create a Realm (zoo in this example)
  Near the top left is master
  Click on master and you will see the button Create Realm
  Click Create Realm and enter zoo as the Realm Name
    Forget the other stuff for now
  Click Create

7. Create Roles (ADMIN, STAFF, GUEST for this example)
  In the zoo realm (it is shown as the chosen in the drop down on topish left)
  Under Manage click Realm Roles
  Click Create Role and enter the name and desciption
  Click Save
  Need to click Realm Role and Create Role to create another one




